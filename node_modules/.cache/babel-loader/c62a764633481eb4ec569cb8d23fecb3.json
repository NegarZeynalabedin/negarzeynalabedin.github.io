{"ast":null,"code":"var _jsxFileName = \"/home/zahra/Desktop/My files/8th semester/Resume/grzybdev.github.io-source/src/Components/Counters/main.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport config from \"../../Configs/config.json\";\nimport moment from \"moment\";\nimport \"./main.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faCalendar, faUsers, faAward } from '@fortawesome/free-solid-svg-icons';\nimport Particles from \"react-particles-js\";\nimport { useCountUp } from 'react-countup';\nimport { withIsVisible } from \"react-is-visible/lib/withIsVisible\";\nlet counters = new Map();\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      particlesHeight: 0\n    };\n    this.containerRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      particlesHeight: this.getContainerHeight()\n    });\n  }\n\n  getContainerHeight() {\n    return this.containerRef.current.clientHeight;\n  }\n\n  getLayout(icon, counter, title, id) {\n    return /*#__PURE__*/React.createElement(CounterEntry, {\n      icon: icon,\n      counter: counter,\n      title: title,\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    });\n  }\n\n  getProjectsCount() {\n    if (config.projects.length > 0) {\n      return this.getLayout(faCheck, config.projects.length, \"Projects\", \"projects\");\n    }\n  }\n\n  getExperienceTime() {\n    const startTime = moment(config.startTime, \"YYYY-MM-DD\");\n    const currentTime = moment();\n    const diffirence = {\n      year: currentTime.diff(startTime, \"years\"),\n      months: currentTime.diff(startTime, \"months\"),\n      days: currentTime.diff(startTime, \"days\"),\n      hours: currentTime.diff(startTime, \"hours\"),\n      minutes: currentTime.diff(startTime, \"minutes\"),\n      seconds: currentTime.diff(startTime, \"seconds\")\n    };\n    if (diffirence.year > 0) return this.getLayout(faCalendar, diffirence.year, (diffirence.year === 1 ? \"year\" : \"years\") + \" of experience\", \"experience\");else if (diffirence.months > 0) return this.getLayout(faCalendar, diffirence.months, (diffirence.months === 1 ? \"month\" : \"months\") + \" of experience\", \"experience\");else if (diffirence.days > 0) return this.getLayout(faCalendar, diffirence.days, (diffirence.days === 1 ? \"day\" : \"days\") + \" of experience\", \"experience\");else if (diffirence.minutes > 0) return this.getLayout(faCalendar, diffirence.minutes, (diffirence.minutes === 1 ? \"minute\" : \"minutes\") + \" of experience\", \"experience\");else return this.getLayout(faCalendar, diffirence.seconds, (diffirence.seconds === 1 ? \"second\" : \"seconds\") + \" of experience\", \"experience\");\n  }\n\n  getClientsCount() {\n    if (config.clientsCount > 0) {\n      return this.getLayout(faAward, config.clientsCount, \"Total clients\", \"clients\");\n    }\n  }\n\n  getAwardsCount() {\n    if (config.awardsCount > 0) {\n      return this.getLayout(faUsers, config.clientsCount, \"Total awards\", \"awards\");\n    }\n  }\n\n  render() {\n    const {\n      isVisible\n    } = this.props;\n\n    if (isVisible) {\n      for (const entry of counters.entries()) {\n        const func = entry[1];\n        func();\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ExperienceCounters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"Background\",\n      height: this.state.particlesHeight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      ref: this.containerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, this.getProjectsCount(), this.getExperienceTime(), this.getClientsCount(), this.getAwardsCount())));\n  }\n\n}\n\nconst CounterEntry = props => {\n  const {\n    countUp,\n    start\n  } = useCountUp({\n    start: 0,\n    end: props.counter\n  });\n  counters.set(props.id, start);\n  return /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"counterIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: props.icon,\n    size: \"2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, countUp), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, props.title));\n};\n\nexport default withIsVisible(Counters);","map":{"version":3,"sources":["/home/zahra/Desktop/My files/8th semester/Resume/grzybdev.github.io-source/src/Components/Counters/main.js"],"names":["React","Component","Row","Col","Container","config","moment","FontAwesomeIcon","faCheck","faCalendar","faUsers","faAward","Particles","useCountUp","withIsVisible","counters","Map","Counters","state","particlesHeight","containerRef","createRef","componentDidMount","setState","getContainerHeight","current","clientHeight","getLayout","icon","counter","title","id","getProjectsCount","projects","length","getExperienceTime","startTime","currentTime","diffirence","year","diff","months","days","hours","minutes","seconds","getClientsCount","clientsCount","getAwardsCount","awardsCount","render","isVisible","props","entry","entries","func","CounterEntry","countUp","start","end","set"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport config from \"../../Configs/config.json\";\nimport moment from \"moment\";\nimport \"./main.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faCalendar, faUsers, faAward } from '@fortawesome/free-solid-svg-icons';\nimport Particles from \"react-particles-js\";\nimport { useCountUp } from 'react-countup';\nimport { withIsVisible } from \"react-is-visible/lib/withIsVisible\";\n\nlet counters = new Map();\n\nclass Counters extends Component {\n\n    state = {\n        particlesHeight: 0\n    }\n\n    containerRef = React.createRef();\n\n    componentDidMount() {\n        this.setState({ particlesHeight: this.getContainerHeight() })\n    }\n\n    getContainerHeight() {\n        return this.containerRef.current.clientHeight;\n    }\n\n    getLayout(icon, counter, title, id) {\n        return <CounterEntry icon={icon} counter={counter} title={title} id={id} />\n    }\n\n    getProjectsCount() {\n        if (config.projects.length > 0) {\n            return this.getLayout(faCheck, config.projects.length, \"Projects\", \"projects\")\n        }\n    }\n\n    getExperienceTime() {\n        const startTime = moment(config.startTime, \"YYYY-MM-DD\");\n        const currentTime = moment()\n\n        const diffirence = {\n            year: currentTime.diff(startTime, \"years\"),\n            months: currentTime.diff(startTime, \"months\"),\n            days: currentTime.diff(startTime, \"days\"),\n            hours: currentTime.diff(startTime, \"hours\"),\n            minutes: currentTime.diff(startTime, \"minutes\"),\n            seconds: currentTime.diff(startTime, \"seconds\")\n        }\n\n        if (diffirence.year > 0)\n            return this.getLayout(faCalendar, diffirence.year, (diffirence.year === 1 ? \"year\" : \"years\") + \" of experience\", \"experience\");\n        else if (diffirence.months > 0)\n            return this.getLayout(faCalendar, diffirence.months, (diffirence.months === 1 ? \"month\" : \"months\") + \" of experience\", \"experience\");\n        else if (diffirence.days > 0)\n            return this.getLayout(faCalendar, diffirence.days, (diffirence.days === 1 ? \"day\" : \"days\") + \" of experience\", \"experience\");\n        else if (diffirence.minutes > 0)\n            return this.getLayout(faCalendar, diffirence.minutes, (diffirence.minutes === 1 ? \"minute\" : \"minutes\") + \" of experience\", \"experience\");\n        else\n            return this.getLayout(faCalendar, diffirence.seconds, (diffirence.seconds === 1 ? \"second\" : \"seconds\") + \" of experience\", \"experience\");\n    }\n\n    getClientsCount() {\n        if (config.clientsCount > 0) {\n            return this.getLayout(faAward, config.clientsCount, \"Total clients\", \"clients\");\n        }\n    }\n\n    getAwardsCount() {\n        if (config.awardsCount > 0) {\n            return this.getLayout(faUsers, config.clientsCount, \"Total awards\", \"awards\");\n        }\n    }\n\n    render() {\n        const { isVisible } = this.props;\n\n        if (isVisible) {\n            for (const entry of counters.entries()) {\n                const func = entry[1];\n                func();\n            }\n        }\n\n        return (\n            <div id=\"ExperienceCounters\">\n                <Particles className=\"Background\" height={this.state.particlesHeight} />\n\n                <Container ref={this.containerRef}>\n                    <Row>\n                        {this.getProjectsCount()}\n                        {this.getExperienceTime()}\n                        {this.getClientsCount()}\n                        {this.getAwardsCount()}\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nconst CounterEntry = (props) => {\n    const { countUp, start } = useCountUp({ start: 0, end: props.counter });\n    counters.set(props.id, start);\n\n    return (\n        <Col>\n            <div className=\"counterIcon\">\n                <FontAwesomeIcon icon={props.icon} size=\"2x\" />\n            </div>\n\n            <h4 className=\"counter\">{countUp}</h4>\n            <p className=\"title\">{props.title}</p>\n        </Col>\n    )\n}\n\nexport default withIsVisible(Counters);"]},"metadata":{},"sourceType":"module"}