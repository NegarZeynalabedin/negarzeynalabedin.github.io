{"ast":null,"code":"var _jsxFileName = \"/home/zahra/Desktop/My files/8th semester/Resume/grzybdev.github.io-source/src/Sections/Experience.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./Experience.css\";\nimport { Container, CardColumns, Card, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport ImgSuspense from \"img-suspense\";\nimport cppLogo from \"../Assets/logos/cpp_logo.png\";\nimport javaLogo from \"../Assets/logos/java_logo.jpg\";\nimport cLogo from \"../Assets/logos/c_logo.png\";\nimport pythonLogo from \"../Assets/logos/python_logo.png\";\nimport MDSpinner from \"react-md-spinner\";\nimport htmlLogo from \"../Assets/logos/html_logo.png\";\nimport assemblyLogo from \"../Assets/logos/assembly_logo.png\";\nimport GoLogo from \"../Assets/logos/go_logo.jpeg\";\nimport vhdlLogo from \"../Assets/logos/vhdl_logo.png\";\nimport mysqlLogo from \"../Assets/logos/mysql_logo.png\";\nimport matlabLogo from \"../Assets/logos/matlab_logo.jpg\";\nimport config from \"../Configs/config.json\";\nimport unityLogo from \"../Assets/logos/unity_logo.png\";\nimport linuxLogo from \"../Assets/logos/Linux_logo.png\";\nimport gymLogo from \"../Assets/logos/gym_logo.png\";\nimport dockerLogo from \"../Assets/logos/docker_logo.png\";\nimport psqlLogo from \"../Assets/logos/psql_logo.png\";\nimport awsLogo from \"../Assets/logos/aws_logo.png\";\nimport azureLogo from \"../Assets/logos/azure_logo.png\";\nimport firebaseLogo from \"../Assets/logos/firebase_logo.png\";\nimport djangoLogo from \"../Assets/logos/django_logo.png\";\nimport djangoRestLogo from \"../Assets/logos/django_rest_logo.png\";\nimport SDLLogo from \"../Assets/logos/sdl_logo.png\";\nimport PyGameLogo from \"../Assets/logos/pygame_logo.png\";\nimport tfLogo from \"../Assets/logos/tf_logo.png\";\nimport kerasLogo from \"../Assets/logos/keras_logo.png\";\nimport npLogo from \"../Assets/logos/np_logo.png\";\nimport scLogo from \"../Assets/logos/sc_logo.png\";\nimport ocvLogo from \"../Assets/logos/ocv_logo.png\";\nimport malletLogo from \"../Assets/logos/mallet_logo.png\";\nimport nltkLogo from \"../Assets/logos/nltk_logo.png\";\nimport srilmLogo from \"../Assets/logos/srilm_logo.png\";\nimport TFSLogo from \"../Assets/logos/vs_logo.png\";\nimport trelloLogo from \"../Assets/logos/trello_logo.png\";\nimport jiraLogo from \"../Assets/logos/jira_logo.jpg\";\nimport blenderLogo from \"../Assets/logos/blender_logo.png\";\nimport gimpLogo from \"../Assets/logos/gimp_logo.png\";\nimport gitLogo from \"../Assets/logos/git_logo.png\";\nimport pycharmLogo from \"../Assets/logos/pycharm_logo.png\";\nimport qtLogo from \"../Assets/logos/qt_logo.png\";\nimport vsLogo from \"../Assets/logos/vs_logo.png\";\nimport Counters from \"../Components/Counters/main\";\nimport { withIsVisible } from \"react-is-visible\";\n\nclass Experience extends Component {\n  constructor(...args) {\n    super(...args);\n    this.languagesBinding = {\n      general: [{\n        logo: pythonLogo,\n        name: \"Python\",\n        description: \"Advanced\"\n      }, {\n        logo: cppLogo,\n        name: \"C++\",\n        description: \"Somewhat experienced\"\n      }, {\n        logo: javaLogo,\n        name: \"Java\",\n        description: \"Somewhat experienced\"\n      }, {\n        logo: matlabLogo,\n        name: \"MATLAB\",\n        description: \"Somewhat experienced\"\n      }],\n      web: [{\n        logo: GoLogo,\n        name: \"Go\",\n        description: \"Normal\"\n      }, {\n        logo: cLogo,\n        name: \"C\",\n        description: \"Normal\"\n      }, {\n        logo: mysqlLogo,\n        name: \"MySQL\",\n        description: \"Normal\"\n      }, {\n        logo: assemblyLogo,\n        name: \"Assembly\",\n        description: \"Somewhat experienced\"\n      }, {\n        logo: vhdlLogo,\n        name: \"VHDL\",\n        description: \"Normal\"\n      }, {\n        logo: htmlLogo,\n        name: \"HTML/CSS\",\n        description: \"Somewhat experienced\"\n      }]\n    };\n    this.enginesBinding = [{\n      logo: unityLogo,\n      name: \"Unity\",\n      description: \"Advanced\"\n    }, {\n      logo: unrealLogo,\n      name: \"Unreal Engine\",\n      description: \"Beginner\"\n    }, {\n      logo: unrealLogo,\n      name: \"Unreal Engine\",\n      description: \"Beginner\"\n    }, {\n      logo: unrealLogo,\n      name: \"Unreal Engine\",\n      description: \"Beginner\"\n    }];\n    this.servicesBinding = [{\n      logo: firebaseLogo,\n      name: \"Firebase\",\n      description: \"Advanced\"\n    }, {\n      logo: azureLogo,\n      name: \"Azure\",\n      description: \"Beginner\"\n    }, {\n      logo: awsLogo,\n      name: \"AWS\",\n      description: \"Beginner\"\n    }];\n    this.LToolsBinding = [{\n      logo: tfLogo,\n      name: \"Tensorflow\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: npLogo,\n      name: \"Numpy\",\n      description: \"Advanced\"\n    }, {\n      logo: kerasLogo,\n      name: \"Keras\",\n      description: \"Advanced\"\n    }, {\n      logo: ocvLogo,\n      name: \"OpenCV\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: scLogo,\n      name: \"Scikit-learn\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: nltkLogo,\n      name: \"NLTK\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: srilmLogo,\n      name: \"SRILM\",\n      description: \"Beginner\"\n    }, {\n      logo: malletLogo,\n      name: \"Mallet\",\n      description: \"Beginner\"\n    }];\n    this.ProjectTools = [{\n      logo: TFSLogo,\n      name: \"TFS\",\n      description: \"Advanced\"\n    }, {\n      logo: trelloLogo,\n      name: \"Trello\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: jiraLogo,\n      name: \"Jira\",\n      description: \"Somewhat experienced\"\n    }];\n    this.softwareBinding = [{\n      logo: djangoLogo,\n      name: \"Django\",\n      description: \"Advanced\"\n    }, {\n      logo: djangoRestLogo,\n      name: \"Django Rest\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: SDLLogo,\n      name: \"SDL\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: PyGameLogo,\n      name: \"PyGame\",\n      description: \"Somewhat experienced\"\n    } // {\n    //     logo: gitLogo,\n    //     name: \"Git\",\n    //     description: \"Advanced\"\n    // },\n    // {\n    //     logo: blenderLogo,\n    //     name: \"Blender\",\n    //     description: \"Beginner\"\n    // },\n    // {\n    //     logo: gimpLogo,\n    //     name: \"Gimp\",\n    //     description: \"Somewhat experienced\"\n    // }\n    ];\n  }\n\n  getEntries(array) {\n    return array.map(entry => {\n      return entry.logo ? /*#__PURE__*/React.createElement(OverlayTrigger, {\n        key: entry.name,\n        placement: \"top\",\n        overlay: /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 34\n          }\n        }, entry.description),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"entryWithLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ImgSuspense, {\n        src: entry.logo,\n        fallback: /*#__PURE__*/React.createElement(MDSpinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 43\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"h6\", {\n        class: \"entryName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      }, entry.name))) : /*#__PURE__*/React.createElement(OverlayTrigger, {\n        key: entry.name,\n        placement: \"top\",\n        overlay: /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 34\n          }\n        }, entry.description),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"entry\",\n        key: entry.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        class: \"entryName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }\n      }, entry.name)));\n    });\n  }\n\n  getExperience(array, showHireMe = false) {\n    if (array.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"NoneText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      }, \"None yet!\"), showHireMe ? /*#__PURE__*/React.createElement(\"a\", {\n        href: `mailto:${config.email}`,\n        className: \"HireText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 35\n        }\n      }, \"Hire me!\") : null);\n    }\n\n    return array.map(entry => /*#__PURE__*/React.createElement(Fragment, {\n      key: entry.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: entry.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, entry.name)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }, entry.notes.map(note => /*#__PURE__*/React.createElement(\"li\", {\n      key: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, note)))));\n  }\n\n  getCardLayout(title, type, data, isOneRow = false) {\n    switch (type) {\n      case \"multiple\":\n        const content = data.map((entry, index) => entry.title ? /*#__PURE__*/React.createElement(React.Fragment, {\n          key: entry.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"contentSection\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 60\n          }\n        }, entry.title)), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }\n        }, entry.data)) : /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 24\n          }\n        }, entry));\n        const CardLayout = isOneRow ? /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 47\n          }\n        }, content) : null;\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }\n        }, title), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }\n        }, CardLayout ? CardLayout : content)));\n\n      case \"list\":\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }\n        }, title), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-text listSection\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }\n        }, data)));\n\n      case \"text\":\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }\n        }, title), /*#__PURE__*/React.createElement(Card.Text, {\n          className: \"experienceDescription\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }\n        }, data)));\n\n      default:\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 24\n          }\n        });\n    }\n  }\n\n  render() {\n    const {\n      isVisible\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      id: \"Experience\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: isVisible ? \"Visible\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"sectionTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, \"Experience\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sectionDesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, \"You can also view my resume (in PDF) \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/resume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 85\n      }\n    }, \"here\")), /*#__PURE__*/React.createElement(CardColumns, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    }, this.getCardLayout(\"Programming Languages\", \"multiple\", [{\n      title: \"Proficient at\",\n      data: this.getEntries(this.languagesBinding.general)\n    }, {\n      title: \"Familiar with\",\n      data: this.getEntries(this.languagesBinding.web)\n    }]), this.getCardLayout(\"Human Languages\", \"multiple\", this.getEntries(config.humanLanguages), true), this.getCardLayout(\"Working Experience\", \"list\", this.getExperience(config.workingExperience, true)), this.getCardLayout(\"Learning Tools\", \"multiple\", this.getEntries(this.LToolsBinding), true), this.getCardLayout(\"Project Managment Tools\", \"multiple\", this.getEntries(this.ProjectTools), true), this.getCardLayout(\"Education\", \"list\", this.getExperience(config.education)), this.getCardLayout(\"Engines\", \"multiple\", this.getEntries(this.enginesBinding), true), this.getCardLayout(\"Services\", \"multiple\", this.getEntries(this.servicesBinding), true), this.getCardLayout(\"FrameWorks, Libraries\", \"multiple\", this.getEntries(this.softwareBinding), true))), /*#__PURE__*/React.createElement(Counters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withIsVisible(Experience);","map":{"version":3,"sources":["/home/zahra/Desktop/My files/8th semester/Resume/grzybdev.github.io-source/src/Sections/Experience.js"],"names":["React","Component","Fragment","Container","CardColumns","Card","Row","Col","Tooltip","OverlayTrigger","ImgSuspense","cppLogo","javaLogo","cLogo","pythonLogo","MDSpinner","htmlLogo","assemblyLogo","GoLogo","vhdlLogo","mysqlLogo","matlabLogo","config","unityLogo","linuxLogo","gymLogo","dockerLogo","psqlLogo","awsLogo","azureLogo","firebaseLogo","djangoLogo","djangoRestLogo","SDLLogo","PyGameLogo","tfLogo","kerasLogo","npLogo","scLogo","ocvLogo","malletLogo","nltkLogo","srilmLogo","TFSLogo","trelloLogo","jiraLogo","blenderLogo","gimpLogo","gitLogo","pycharmLogo","qtLogo","vsLogo","Counters","withIsVisible","Experience","languagesBinding","general","logo","name","description","web","enginesBinding","unrealLogo","servicesBinding","LToolsBinding","ProjectTools","softwareBinding","getEntries","array","map","entry","getExperience","showHireMe","length","email","url","notes","note","getCardLayout","title","type","data","isOneRow","content","index","CardLayout","render","isVisible","props","humanLanguages","workingExperience","education"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport \"./Experience.css\";\nimport { Container, CardColumns, Card, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport ImgSuspense from \"img-suspense\";\nimport cppLogo from \"../Assets/logos/cpp_logo.png\";\nimport javaLogo from \"../Assets/logos/java_logo.jpg\";\nimport cLogo from \"../Assets/logos/c_logo.png\";\nimport pythonLogo from \"../Assets/logos/python_logo.png\";\nimport MDSpinner from \"react-md-spinner\";\nimport htmlLogo from \"../Assets/logos/html_logo.png\";\nimport assemblyLogo from \"../Assets/logos/assembly_logo.png\";\nimport GoLogo from \"../Assets/logos/go_logo.jpeg\";\nimport vhdlLogo from \"../Assets/logos/vhdl_logo.png\";\nimport mysqlLogo from \"../Assets/logos/mysql_logo.png\";\nimport matlabLogo from \"../Assets/logos/matlab_logo.jpg\";\nimport config from \"../Configs/config.json\";\nimport unityLogo from \"../Assets/logos/unity_logo.png\";\nimport linuxLogo from \"../Assets/logos/Linux_logo.png\";\nimport gymLogo from \"../Assets/logos/gym_logo.png\";\nimport dockerLogo from \"../Assets/logos/docker_logo.png\";\nimport psqlLogo from \"../Assets/logos/psql_logo.png\";\n\n\nimport awsLogo from \"../Assets/logos/aws_logo.png\";\nimport azureLogo from \"../Assets/logos/azure_logo.png\";\nimport firebaseLogo from \"../Assets/logos/firebase_logo.png\";\nimport djangoLogo from \"../Assets/logos/django_logo.png\";\nimport djangoRestLogo from \"../Assets/logos/django_rest_logo.png\";\nimport SDLLogo from \"../Assets/logos/sdl_logo.png\";\nimport PyGameLogo from \"../Assets/logos/pygame_logo.png\";\nimport tfLogo from \"../Assets/logos/tf_logo.png\";\nimport kerasLogo from \"../Assets/logos/keras_logo.png\";\nimport npLogo from \"../Assets/logos/np_logo.png\";\nimport scLogo from \"../Assets/logos/sc_logo.png\";\nimport ocvLogo from \"../Assets/logos/ocv_logo.png\";\nimport malletLogo from \"../Assets/logos/mallet_logo.png\";\nimport nltkLogo from \"../Assets/logos/nltk_logo.png\";\nimport srilmLogo from \"../Assets/logos/srilm_logo.png\";\nimport TFSLogo from \"../Assets/logos/vs_logo.png\";\nimport trelloLogo from \"../Assets/logos/trello_logo.png\";\nimport jiraLogo from \"../Assets/logos/jira_logo.jpg\";\n\nimport blenderLogo from \"../Assets/logos/blender_logo.png\";\nimport gimpLogo from \"../Assets/logos/gimp_logo.png\";\nimport gitLogo from \"../Assets/logos/git_logo.png\";\nimport pycharmLogo from \"../Assets/logos/pycharm_logo.png\";\nimport qtLogo from \"../Assets/logos/qt_logo.png\";\nimport vsLogo from \"../Assets/logos/vs_logo.png\";\nimport Counters from \"../Components/Counters/main\";\nimport { withIsVisible } from \"react-is-visible\";\n\nclass Experience extends Component {\n\n    languagesBinding = {\n        general: [\n            {\n                logo: pythonLogo,\n                name: \"Python\",\n                description: \"Advanced\"\n            },\n            {\n                logo: cppLogo,\n                name: \"C++\",\n                description: \"Somewhat experienced\"\n            },\n            {\n                logo: javaLogo,\n                name: \"Java\",\n                description: \"Somewhat experienced\"\n            },\n            {\n                logo: matlabLogo,\n                name: \"MATLAB\",\n                description: \"Somewhat experienced\"\n            }\n           \n        ],\n        web: [\n            {\n                logo: GoLogo,\n                name: \"Go\",\n                description: \"Normal\"\n            },\n            {\n                logo: cLogo,\n                name: \"C\",\n                description: \"Normal\"\n            },\n\n            {\n                logo: mysqlLogo,\n                name: \"MySQL\",\n                description: \"Normal\"\n            },\n            {\n                logo: assemblyLogo,\n                name: \"Assembly\",\n                description: \"Somewhat experienced\"\n            },\n            {\n                logo: vhdlLogo,\n                name: \"VHDL\",\n                description: \"Normal\"\n            },\n            {\n                logo: htmlLogo,\n                name: \"HTML/CSS\",\n                description: \"Somewhat experienced\"\n            }\n            \n\n        ]\n    }\n\n    enginesBinding = [\n        {\n            logo: unityLogo,\n            name: \"Unity\",\n            description: \"Advanced\"\n        },\n        {\n            logo: unrealLogo,\n            name: \"Unreal Engine\",\n            description: \"Beginner\"\n        },\n        {\n            logo: unrealLogo,\n            name: \"Unreal Engine\",\n            description: \"Beginner\"\n        },\n        {\n            logo: unrealLogo,\n            name: \"Unreal Engine\",\n            description: \"Beginner\"\n        },\n\n    ]\n\n    servicesBinding = [\n        {\n            logo: firebaseLogo,\n            name: \"Firebase\",\n            description: \"Advanced\"\n        },\n        {\n            logo: azureLogo,\n            name: \"Azure\",\n            description: \"Beginner\"\n        },\n        {\n            logo: awsLogo,\n            name: \"AWS\",\n            description: \"Beginner\"\n        }\n    ]\n    LToolsBinding = [\n        {\n            logo: tfLogo,\n            name: \"Tensorflow\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: npLogo,\n            name: \"Numpy\",\n            description: \"Advanced\"\n        },\n        {\n            logo: kerasLogo,\n            name: \"Keras\",\n            description: \"Advanced\"\n        },\n        {\n            logo: ocvLogo,\n            name: \"OpenCV\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: scLogo,\n            name: \"Scikit-learn\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: nltkLogo,\n            name: \"NLTK\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: srilmLogo,\n            name: \"SRILM\",\n            description: \"Beginner\"\n        },\n        {\n            logo: malletLogo,\n            name: \"Mallet\",\n            description: \"Beginner\"\n        }\n\n    ]\n    ProjectTools = [\n        {\n            logo: TFSLogo,\n            name: \"TFS\",\n            description: \"Advanced\"\n        },\n        {\n            logo: trelloLogo,\n            name: \"Trello\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: jiraLogo,\n            name: \"Jira\",\n            description: \"Somewhat experienced\"\n        }\n\n    ]\n    softwareBinding = [\n        {\n            logo: djangoLogo,\n            name: \"Django\",\n            description: \"Advanced\"\n        },\n        {\n            logo: djangoRestLogo,\n            name: \"Django Rest\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: SDLLogo,\n            name: \"SDL\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: PyGameLogo,\n            name: \"PyGame\",\n            description: \"Somewhat experienced\"\n        }\n        // {\n        //     logo: gitLogo,\n        //     name: \"Git\",\n        //     description: \"Advanced\"\n        // },\n        // {\n        //     logo: blenderLogo,\n        //     name: \"Blender\",\n        //     description: \"Beginner\"\n        // },\n        // {\n        //     logo: gimpLogo,\n        //     name: \"Gimp\",\n        //     description: \"Somewhat experienced\"\n        // }\n    ]\n\n    getEntries(array) {\n        return array.map(entry => {\n            return entry.logo\n                ? (\n                    <OverlayTrigger\n                        key={entry.name}\n                        placement=\"top\"\n                        overlay={<Tooltip>{entry.description}</Tooltip>}>\n                        <Col className=\"entryWithLogo\">\n                            <ImgSuspense\n                                src={entry.logo}\n                                fallback={<MDSpinner />} />\n                            <h6 class=\"entryName\">{entry.name}</h6>\n                        </Col>\n                    </OverlayTrigger>\n                )\n                : (\n                    <OverlayTrigger\n                        key={entry.name}\n                        placement=\"top\"\n                        overlay={<Tooltip>{entry.description}</Tooltip>}>\n                        <Col className=\"entry\" key={entry.name}>\n                            <h6 class=\"entryName\">{entry.name}</h6>\n                        </Col>\n                    </OverlayTrigger>\n                )\n        })\n    }\n\n    getExperience(array, showHireMe = false) {\n        if (array.length === 0) {\n            return (\n                <div className=\"Empty\">\n                    <p className=\"NoneText\">None yet!</p>\n                    {showHireMe ? <a href={`mailto:${config.email}`} className=\"HireText\">Hire me!</a> : null}\n                </div>\n            )\n        }\n\n        return array.map(entry => (\n            <Fragment key={entry.name}>\n                <h6><a href={entry.url}>{entry.name}</a></h6>\n\n                <ul>\n                    {entry.notes.map(note => (\n                        <li key={note}>{note}</li>\n                    ))}\n                </ul>\n            </Fragment>\n        ))\n    }\n\n    getCardLayout(title, type, data, isOneRow = false) {\n        switch (type) {\n            case \"multiple\":\n                const content = data.map((entry, index) => entry.title\n                    ? (\n                        <React.Fragment key={entry.title}>\n                            <h4 className=\"contentSection\"><span>{entry.title}</span></h4>\n                            <Row>{entry.data}</Row>\n                        </React.Fragment>\n                    )\n                    : (<Col key={index}>{entry}</Col>))\n\n                const CardLayout = isOneRow ? <Row>{content}</Row> : null;\n\n                return (\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{title}</Card.Title>\n                            <hr />\n                            <div className=\"card-text\">{CardLayout ? CardLayout : content}</div>\n                        </Card.Body>\n                    </Card>\n                )\n            case \"list\":\n                return (\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{title}</Card.Title>\n                            <hr />\n                            <div className=\"card-text listSection\">{data}</div>\n                        </Card.Body>\n                    </Card>\n                )\n            case \"text\":\n                return (\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{title}</Card.Title>\n                            <Card.Text className=\"experienceDescription\">{data}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                )\n            default:\n                return <Card></Card>\n        }\n    }\n\n    render() {\n        const { isVisible } = this.props;\n\n        return (\n            <section id=\"Experience\">\n                <Container className={isVisible ? \"Visible\" : \"\"}>\n                    <h1 className=\"sectionTitle\">Experience</h1>\n                    <p className=\"sectionDesc\">You can also view my resume (in PDF) <a href=\"/resume\">here</a></p>\n\n                    <CardColumns>\n                        {this.getCardLayout(\"Programming Languages\", \"multiple\", [{ title: \"Proficient at\", data: this.getEntries(this.languagesBinding.general) }, { title: \"Familiar with\", data: this.getEntries(this.languagesBinding.web) }])}\n                        {this.getCardLayout(\"Human Languages\", \"multiple\", this.getEntries(config.humanLanguages), true)}\n                        {this.getCardLayout(\"Working Experience\", \"list\", this.getExperience(config.workingExperience, true))}\n                        {/* {this.getCardLayout(config.experienceDescriptionCard1.name, \"text\", config.experienceDescriptionCard1.content)} */}\n                        {this.getCardLayout(\"Learning Tools\", \"multiple\", this.getEntries(this.LToolsBinding), true)}\n                        {this.getCardLayout(\"Project Managment Tools\", \"multiple\", this.getEntries(this.ProjectTools), true)}\n                        {/* {this.getCardLayout(config.experienceDescriptionCard2.name, \"text\", config.experienceDescriptionCard2.content)} */}\n                        {this.getCardLayout(\"Education\", \"list\", this.getExperience(config.education))}\n                        {this.getCardLayout(\"Engines\", \"multiple\", this.getEntries(this.enginesBinding), true)}\n                        {this.getCardLayout(\"Services\", \"multiple\", this.getEntries(this.servicesBinding), true)}\n                        {this.getCardLayout(\"FrameWorks, Libraries\", \"multiple\", this.getEntries(this.softwareBinding), true)}\n                    </CardColumns>\n                </Container>\n\n                <Counters />\n            </section>\n        );\n    }\n}\n\nexport default withIsVisible(Experience);"]},"metadata":{},"sourceType":"module"}