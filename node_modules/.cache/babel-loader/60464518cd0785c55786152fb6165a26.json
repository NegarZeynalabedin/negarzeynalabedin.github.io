{"ast":null,"code":"var _jsxFileName = \"/home/zahra/Desktop/My files/8th semester/Resume/grzybdev.github.io-source/src/Sections/Experience.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./Experience.css\";\nimport { Container, CardColumns, Card, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport ImgSuspense from \"img-suspense\";\nimport cppLogo from \"../Assets/logos/cpp_logo.png\";\nimport javaLogo from \"../Assets/logos/java_logo.jpg\";\nimport cLogo from \"../Assets/logos/c_logo.png\";\nimport pythonLogo from \"../Assets/logos/python_logo.png\";\nimport MDSpinner from \"react-md-spinner\";\nimport htmlLogo from \"../Assets/logos/html_logo.png\";\nimport assemblyLogo from \"../Assets/logos/assembly_logo.png\";\nimport GoLogo from \"../Assets/logos/go_logo.jpeg\";\nimport vhdlLogo from \"../Assets/logos/vhdl_logo.png\";\nimport mysqlLogo from \"../Assets/logos/mysql_logo.png\";\nimport matlabLogo from \"../Assets/logos/matlab_logo.jpg\";\nimport config from \"../Configs/config.json\";\nimport unityLogo from \"../Assets/logos/unity_logo.png\";\nimport unrealLogo from \"../Assets/logos/ue_logo.png\";\nimport awsLogo from \"../Assets/logos/aws_logo.png\";\nimport azureLogo from \"../Assets/logos/azure_logo.png\";\nimport firebaseLogo from \"../Assets/logos/firebase_logo.png\";\nimport androidStudioLogo from \"../Assets/logos/androidstudio_logo.png\";\nimport blenderLogo from \"../Assets/logos/blender_logo.png\";\nimport gimpLogo from \"../Assets/logos/gimp_logo.png\";\nimport gitLogo from \"../Assets/logos/git_logo.png\";\nimport pycharmLogo from \"../Assets/logos/pycharm_logo.png\";\nimport qtLogo from \"../Assets/logos/qt_logo.png\";\nimport vsLogo from \"../Assets/logos/vs_logo.png\";\nimport Counters from \"../Components/Counters/main\";\nimport { withIsVisible } from \"react-is-visible\";\n\nclass Experience extends Component {\n  constructor(...args) {\n    super(...args);\n    this.languagesBinding = {\n      general: [{\n        logo: pythonLogo,\n        name: \"Python\",\n        description: \"Advanced\"\n      }, {\n        logo: cppLogo,\n        name: \"C++\",\n        description: \"Somewhat experienced\"\n      }, {\n        logo: javaLogo,\n        name: \"Java\",\n        description: \"Somewhat experienced\"\n      }, {\n        logo: matlabLogo,\n        name: \"MATLAB\",\n        description: \"Somewhat experienced\"\n      }],\n      web: [{\n        logo: GoLogo,\n        name: \"Go\",\n        description: \"Normal\"\n      }, {\n        logo: cLogo,\n        name: \"C\",\n        description: \"Normal\"\n      }, {\n        logo: mysqlLogo,\n        name: \"MySQL\",\n        description: \"Normal\"\n      }, {\n        logo: assemblyLogo,\n        name: \"Assembly\",\n        description: \"Somewhat experienced\"\n      }, {\n        logo: vhdlLogo,\n        name: \"VHDL\",\n        description: \"Normal\"\n      }, {\n        logo: htmlLogo,\n        name: \"HTML/CSS\",\n        description: \"Somewhat experienced\"\n      }]\n    };\n    this.enginesBinding = [{\n      logo: unityLogo,\n      name: \"Unity\",\n      description: \"Advanced\"\n    }, {\n      logo: unrealLogo,\n      name: \"Unreal Engine\",\n      description: \"Beginner\"\n    }];\n    this.servicesBinding = [{\n      logo: firebaseLogo,\n      name: \"Firebase\",\n      description: \"Advanced\"\n    }, {\n      logo: azureLogo,\n      name: \"Azure\",\n      description: \"Beginner\"\n    }, {\n      logo: awsLogo,\n      name: \"AWS\",\n      description: \"Beginner\"\n    }];\n    this.softwareBinding = [{\n      logo: djangoLogo,\n      name: \"Django\",\n      description: \"Advanced\"\n    }, {\n      logo: djangoRestLogo,\n      name: \"Django Rest\",\n      description: \"Somewhat experienced\"\n    }, {\n      logo: pycharmLogo,\n      name: \"Flask\",\n      description: \"Advanced\"\n    }, {\n      logo: qtLogo,\n      name: \"Qt\",\n      description: \"Beginner\"\n    }, {\n      logo: gitLogo,\n      name: \"Git\",\n      description: \"Advanced\"\n    }, {\n      logo: blenderLogo,\n      name: \"Blender\",\n      description: \"Beginner\"\n    }, {\n      logo: gimpLogo,\n      name: \"Gimp\",\n      description: \"Somewhat experienced\"\n    }];\n  }\n\n  getEntries(array) {\n    return array.map(entry => {\n      return entry.logo ? /*#__PURE__*/React.createElement(OverlayTrigger, {\n        key: entry.name,\n        placement: \"top\",\n        overlay: /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 34\n          }\n        }, entry.description),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"entryWithLogo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ImgSuspense, {\n        src: entry.logo,\n        fallback: /*#__PURE__*/React.createElement(MDSpinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 43\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"h6\", {\n        class: \"entryName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }\n      }, entry.name))) : /*#__PURE__*/React.createElement(OverlayTrigger, {\n        key: entry.name,\n        placement: \"top\",\n        overlay: /*#__PURE__*/React.createElement(Tooltip, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 34\n          }\n        }, entry.description),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"entry\",\n        key: entry.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        class: \"entryName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }, entry.name)));\n    });\n  }\n\n  getExperience(array, showHireMe = false) {\n    if (array.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"NoneText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \"None yet!\"), showHireMe ? /*#__PURE__*/React.createElement(\"a\", {\n        href: `mailto:${config.email}`,\n        className: \"HireText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 35\n        }\n      }, \"Hire me!\") : null);\n    }\n\n    return array.map(entry => /*#__PURE__*/React.createElement(Fragment, {\n      key: entry.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: entry.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, entry.name)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, entry.notes.map(note => /*#__PURE__*/React.createElement(\"li\", {\n      key: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, note)))));\n  }\n\n  getCardLayout(title, type, data, isOneRow = false) {\n    switch (type) {\n      case \"multiple\":\n        const content = data.map((entry, index) => entry.title ? /*#__PURE__*/React.createElement(React.Fragment, {\n          key: entry.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"contentSection\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 60\n          }\n        }, entry.title)), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }\n        }, entry.data)) : /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 24\n          }\n        }, entry));\n        const CardLayout = isOneRow ? /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 47\n          }\n        }, content) : null;\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }\n        }, title), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }\n        }, CardLayout ? CardLayout : content)));\n\n      case \"list\":\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }\n        }, title), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-text listSection\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }\n        }, data)));\n\n      case \"text\":\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }\n        }, title), /*#__PURE__*/React.createElement(Card.Text, {\n          className: \"experienceDescription\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }\n        }, data)));\n\n      default:\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 24\n          }\n        });\n    }\n  }\n\n  render() {\n    const {\n      isVisible\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      id: \"Experience\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: isVisible ? \"Visible\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"sectionTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }, \"Experience\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sectionDesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, \"You can also view my resume (in PDF) \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/resume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 85\n      }\n    }, \"here\")), /*#__PURE__*/React.createElement(CardColumns, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    }, this.getCardLayout(\"Programming Languages\", \"multiple\", [{\n      title: \"Proficient at\",\n      data: this.getEntries(this.languagesBinding.general)\n    }, {\n      title: \"Familiar with\",\n      data: this.getEntries(this.languagesBinding.web)\n    }]), this.getCardLayout(\"Human Languages\", \"multiple\", this.getEntries(config.humanLanguages), true), this.getCardLayout(\"Working Experience\", \"list\", this.getExperience(config.workingExperience, true)), this.getCardLayout(config.experienceDescriptionCard1.name, \"text\", config.experienceDescriptionCard1.content), this.getCardLayout(config.experienceDescriptionCard2.name, \"text\", config.experienceDescriptionCard2.content), this.getCardLayout(\"Education\", \"list\", this.getExperience(config.education)), this.getCardLayout(\"Engines\", \"multiple\", this.getEntries(this.enginesBinding), true), this.getCardLayout(\"Services\", \"multiple\", this.getEntries(this.servicesBinding), true), this.getCardLayout(\"FrameWorks, Libraries\", \"multiple\", this.getEntries(this.softwareBinding), true))), /*#__PURE__*/React.createElement(Counters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withIsVisible(Experience);","map":{"version":3,"sources":["/home/zahra/Desktop/My files/8th semester/Resume/grzybdev.github.io-source/src/Sections/Experience.js"],"names":["React","Component","Fragment","Container","CardColumns","Card","Row","Col","Tooltip","OverlayTrigger","ImgSuspense","cppLogo","javaLogo","cLogo","pythonLogo","MDSpinner","htmlLogo","assemblyLogo","GoLogo","vhdlLogo","mysqlLogo","matlabLogo","config","unityLogo","unrealLogo","awsLogo","azureLogo","firebaseLogo","androidStudioLogo","blenderLogo","gimpLogo","gitLogo","pycharmLogo","qtLogo","vsLogo","Counters","withIsVisible","Experience","languagesBinding","general","logo","name","description","web","enginesBinding","servicesBinding","softwareBinding","djangoLogo","djangoRestLogo","getEntries","array","map","entry","getExperience","showHireMe","length","email","url","notes","note","getCardLayout","title","type","data","isOneRow","content","index","CardLayout","render","isVisible","props","humanLanguages","workingExperience","experienceDescriptionCard1","experienceDescriptionCard2","education"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport \"./Experience.css\";\nimport { Container, CardColumns, Card, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport ImgSuspense from \"img-suspense\";\nimport cppLogo from \"../Assets/logos/cpp_logo.png\";\nimport javaLogo from \"../Assets/logos/java_logo.jpg\";\nimport cLogo from \"../Assets/logos/c_logo.png\";\nimport pythonLogo from \"../Assets/logos/python_logo.png\";\nimport MDSpinner from \"react-md-spinner\";\nimport htmlLogo from \"../Assets/logos/html_logo.png\";\nimport assemblyLogo from \"../Assets/logos/assembly_logo.png\";\nimport GoLogo from \"../Assets/logos/go_logo.jpeg\";\nimport vhdlLogo from \"../Assets/logos/vhdl_logo.png\";\nimport mysqlLogo from \"../Assets/logos/mysql_logo.png\";\nimport matlabLogo from \"../Assets/logos/matlab_logo.jpg\";\nimport config from \"../Configs/config.json\";\nimport unityLogo from \"../Assets/logos/unity_logo.png\";\nimport unrealLogo from \"../Assets/logos/ue_logo.png\";\nimport awsLogo from \"../Assets/logos/aws_logo.png\";\nimport azureLogo from \"../Assets/logos/azure_logo.png\";\nimport firebaseLogo from \"../Assets/logos/firebase_logo.png\";\nimport androidStudioLogo from \"../Assets/logos/androidstudio_logo.png\";\nimport blenderLogo from \"../Assets/logos/blender_logo.png\";\nimport gimpLogo from \"../Assets/logos/gimp_logo.png\";\nimport gitLogo from \"../Assets/logos/git_logo.png\";\nimport pycharmLogo from \"../Assets/logos/pycharm_logo.png\";\nimport qtLogo from \"../Assets/logos/qt_logo.png\";\nimport vsLogo from \"../Assets/logos/vs_logo.png\";\nimport Counters from \"../Components/Counters/main\";\nimport { withIsVisible } from \"react-is-visible\";\n\nclass Experience extends Component {\n\n    languagesBinding = {\n        general: [\n            {\n                logo: pythonLogo,\n                name: \"Python\",\n                description: \"Advanced\"\n            },\n            {\n                logo: cppLogo,\n                name: \"C++\",\n                description: \"Somewhat experienced\"\n            },\n            {\n                logo: javaLogo,\n                name: \"Java\",\n                description: \"Somewhat experienced\"\n            },\n            {\n                logo: matlabLogo,\n                name: \"MATLAB\",\n                description: \"Somewhat experienced\"\n            }\n           \n        ],\n        web: [\n            {\n                logo: GoLogo,\n                name: \"Go\",\n                description: \"Normal\"\n            },\n            {\n                logo: cLogo,\n                name: \"C\",\n                description: \"Normal\"\n            },\n\n            {\n                logo: mysqlLogo,\n                name: \"MySQL\",\n                description: \"Normal\"\n            },\n            {\n                logo: assemblyLogo,\n                name: \"Assembly\",\n                description: \"Somewhat experienced\"\n            },\n            {\n                logo: vhdlLogo,\n                name: \"VHDL\",\n                description: \"Normal\"\n            },\n            {\n                logo: htmlLogo,\n                name: \"HTML/CSS\",\n                description: \"Somewhat experienced\"\n            }\n            \n\n        ]\n    }\n\n    enginesBinding = [\n        {\n            logo: unityLogo,\n            name: \"Unity\",\n            description: \"Advanced\"\n        },\n        {\n            logo: unrealLogo,\n            name: \"Unreal Engine\",\n            description: \"Beginner\"\n        }\n    ]\n\n    servicesBinding = [\n        {\n            logo: firebaseLogo,\n            name: \"Firebase\",\n            description: \"Advanced\"\n        },\n        {\n            logo: azureLogo,\n            name: \"Azure\",\n            description: \"Beginner\"\n        },\n        {\n            logo: awsLogo,\n            name: \"AWS\",\n            description: \"Beginner\"\n        }\n    ]\n\n    softwareBinding = [\n        {\n            logo: djangoLogo,\n            name: \"Django\",\n            description: \"Advanced\"\n        },\n        {\n            logo: djangoRestLogo,\n            name: \"Django Rest\",\n            description: \"Somewhat experienced\"\n        },\n        {\n            logo: pycharmLogo,\n            name: \"Flask\",\n            description: \"Advanced\"\n        },\n        {\n            logo: qtLogo,\n            name: \"Qt\",\n            description: \"Beginner\"\n        },\n        {\n            logo: gitLogo,\n            name: \"Git\",\n            description: \"Advanced\"\n        },\n        {\n            logo: blenderLogo,\n            name: \"Blender\",\n            description: \"Beginner\"\n        },\n        {\n            logo: gimpLogo,\n            name: \"Gimp\",\n            description: \"Somewhat experienced\"\n        }\n    ]\n\n    getEntries(array) {\n        return array.map(entry => {\n            return entry.logo\n                ? (\n                    <OverlayTrigger\n                        key={entry.name}\n                        placement=\"top\"\n                        overlay={<Tooltip>{entry.description}</Tooltip>}>\n                        <Col className=\"entryWithLogo\">\n                            <ImgSuspense\n                                src={entry.logo}\n                                fallback={<MDSpinner />} />\n                            <h6 class=\"entryName\">{entry.name}</h6>\n                        </Col>\n                    </OverlayTrigger>\n                )\n                : (\n                    <OverlayTrigger\n                        key={entry.name}\n                        placement=\"top\"\n                        overlay={<Tooltip>{entry.description}</Tooltip>}>\n                        <Col className=\"entry\" key={entry.name}>\n                            <h6 class=\"entryName\">{entry.name}</h6>\n                        </Col>\n                    </OverlayTrigger>\n                )\n        })\n    }\n\n    getExperience(array, showHireMe = false) {\n        if (array.length === 0) {\n            return (\n                <div className=\"Empty\">\n                    <p className=\"NoneText\">None yet!</p>\n                    {showHireMe ? <a href={`mailto:${config.email}`} className=\"HireText\">Hire me!</a> : null}\n                </div>\n            )\n        }\n\n        return array.map(entry => (\n            <Fragment key={entry.name}>\n                <h6><a href={entry.url}>{entry.name}</a></h6>\n\n                <ul>\n                    {entry.notes.map(note => (\n                        <li key={note}>{note}</li>\n                    ))}\n                </ul>\n            </Fragment>\n        ))\n    }\n\n    getCardLayout(title, type, data, isOneRow = false) {\n        switch (type) {\n            case \"multiple\":\n                const content = data.map((entry, index) => entry.title\n                    ? (\n                        <React.Fragment key={entry.title}>\n                            <h4 className=\"contentSection\"><span>{entry.title}</span></h4>\n                            <Row>{entry.data}</Row>\n                        </React.Fragment>\n                    )\n                    : (<Col key={index}>{entry}</Col>))\n\n                const CardLayout = isOneRow ? <Row>{content}</Row> : null;\n\n                return (\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{title}</Card.Title>\n                            <hr />\n                            <div className=\"card-text\">{CardLayout ? CardLayout : content}</div>\n                        </Card.Body>\n                    </Card>\n                )\n            case \"list\":\n                return (\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{title}</Card.Title>\n                            <hr />\n                            <div className=\"card-text listSection\">{data}</div>\n                        </Card.Body>\n                    </Card>\n                )\n            case \"text\":\n                return (\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{title}</Card.Title>\n                            <Card.Text className=\"experienceDescription\">{data}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                )\n            default:\n                return <Card></Card>\n        }\n    }\n\n    render() {\n        const { isVisible } = this.props;\n\n        return (\n            <section id=\"Experience\">\n                <Container className={isVisible ? \"Visible\" : \"\"}>\n                    <h1 className=\"sectionTitle\">Experience</h1>\n                    <p className=\"sectionDesc\">You can also view my resume (in PDF) <a href=\"/resume\">here</a></p>\n\n                    <CardColumns>\n                        {this.getCardLayout(\"Programming Languages\", \"multiple\", [{ title: \"Proficient at\", data: this.getEntries(this.languagesBinding.general) }, { title: \"Familiar with\", data: this.getEntries(this.languagesBinding.web) }])}\n                        {this.getCardLayout(\"Human Languages\", \"multiple\", this.getEntries(config.humanLanguages), true)}\n                        {this.getCardLayout(\"Working Experience\", \"list\", this.getExperience(config.workingExperience, true))}\n                        {this.getCardLayout(config.experienceDescriptionCard1.name, \"text\", config.experienceDescriptionCard1.content)}\n                        {this.getCardLayout(config.experienceDescriptionCard2.name, \"text\", config.experienceDescriptionCard2.content)}\n                        {this.getCardLayout(\"Education\", \"list\", this.getExperience(config.education))}\n                        {this.getCardLayout(\"Engines\", \"multiple\", this.getEntries(this.enginesBinding), true)}\n                        {this.getCardLayout(\"Services\", \"multiple\", this.getEntries(this.servicesBinding), true)}\n                        {this.getCardLayout(\"FrameWorks, Libraries\", \"multiple\", this.getEntries(this.softwareBinding), true)}\n                    </CardColumns>\n                </Container>\n\n                <Counters />\n            </section>\n        );\n    }\n}\n\nexport default withIsVisible(Experience);"]},"metadata":{},"sourceType":"module"}